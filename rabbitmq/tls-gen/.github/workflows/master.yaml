# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tls-gen

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run
      run: |
        make -C basic
        make -C basic info
        make -C basic verify
        make -C basic clean
        make -C separate_intermediates
        make -C separate_intermediates info
        make -C separate_intermediates verify
        make -C separate_intermediates clean
        make -C two_shared_intermediates
        make -C two_shared_intermediates info
        make -C two_shared_intermediates verify
        make -C two_shared_intermediates clean
    - name: Test
      run: ./test/basic.sh
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if (Test-Path requirements.txt -PathType leaf)
        {
        pip install -r requirements.txt
        }
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run
      run: |
        make -C basic
        make -C basic info
        make -C basic verify
        make -C basic clean
        make -C separate_intermediates
        make -C separate_intermediates info
        make -C separate_intermediates verify
        make -C separate_intermediates clean
        make -C two_shared_intermediates
        make -C two_shared_intermediates info
        make -C two_shared_intermediates verify
        make -C two_shared_intermediates clean
  build-osx:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run
      run: |
        make -C basic
        make -C basic info
        make -C basic verify
        make -C basic clean
        make -C separate_intermediates
        make -C separate_intermediates info
        make -C separate_intermediates verify
        make -C separate_intermediates clean
        make -C two_shared_intermediates
        make -C two_shared_intermediates info
        make -C two_shared_intermediates verify
        make -C two_shared_intermediates clean
